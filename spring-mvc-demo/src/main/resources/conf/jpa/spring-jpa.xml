<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
	default-lazy-init="true">
	<description>Spring jpa 配置 </description>

	<!--DataSource配置 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!-- 数据连接信息 -->
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- 其他配置 -->
		<property name="initialPoolSize" value="${jdbc.pool.initialPoolSize}" />
		<property name="minPoolSize" value="${jdbc.pool.minPoolSize}" />
		<property name="maxPoolSize" value="${jdbc.pool.maxPoolSize}" />
		<!-- <property name="maxActive" value="${jdbc.pool.maxActive}" /> -->
		<!-- <property name="minIdle" value="${jdbc.pool.minIdle}" /> -->
		<property name="maxIdleTime" value="${jdbc.pool.maxIdleTime}" />
		<!-- <property name="maxWait" value="${jdbc.pool.maxWait}" /> -->
		<property name="acquireIncrement" value="${jdbc.pool.acquireIncrement}" />
		<property name="checkoutTimeout" value="${jdbc.pool.checkoutTimeout}" />
		<property name="maxIdleTimeExcessConnections" value="${jdbc.pool.maxIdleTimeExcessConnections}" />
		<property name="idleConnectionTestPeriod" value="${jdbc.pool.idleConnectionTestPeriod}" />
		<property name="acquireRetryAttempts" value="${jdbc.pool.acquireRetryAttempts}" />
		<!-- <property name="poolPreparedStatements" value="${jdbc.pool.poolPreparedStatements}"
			/> -->
		<property name="breakAfterAcquireFailure" value="${jdbc.pool.breakAfterAcquireFailure}" />
		<property name="testConnectionOnCheckout" value="${jdbc.pool.testConnectionOnCheckout}" />
		<property name="maxStatements" value="${jdbc.pool.maxStatements}" />
		<property name="acquireRetryDelay" value="${jdbc.pool.acquireRetryDelay}" />
		<property name="maxConnectionAge" value="${jdbc.pool.maxConnectionAge}" />
	</bean>

	<!-- 对标注@PersistenceContext的类经行增强，引入代理后的EntityManager实例 -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
	<!-- 对标注@Repository的类经行增强，将EntityManager异常转换为SpringDAO体系的异常 -->
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	<!-- JSR303 Validator定义 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
		p:database="MYSQL" p:showSql="true" p:generateDdl="true"
		p:prepareConnection="true" p:databasePlatform="org.hibernate.dialect.MySQL5InnoDBDialect" />

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:packagesToScan="com.shanke" p:dataSource-ref="dataSource"
		p:persistenceXmlLocation="classpath:META-INF/persistence.xml"
		p:persistenceUnitName="shanke" p:jpaVendorAdapter-ref="jpaVendorAdapter" />

	<!-- 建立视图内拦截器来解决JPA中访问延迟加载属性时产生的无会话异常 -->
	<!-- LazyInitializationException: could not initialize proxy no session -->
	<!-- 此拦截器会注入到servlet配置中的DefaultAnnotationHandlerMapping中 -->
	<bean name="openEntityManagerInViewInterceptor"
		class="org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor"
		p:entityManagerFactory-ref="entityManagerFactory" />

	<!-- Spring Data Jpa配置 -->
	<jpa:repositories base-package="com.shanke.dao"
		repository-impl-postfix="Impl" query-lookup-strategy="create-if-not-found"
		transaction-manager-ref="transactionManager"
		entity-manager-factory-ref="entityManagerFactory" />
	<!-- JPA 事务管理 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
</beans>